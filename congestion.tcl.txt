set ns [new Simulator] #create simulator
set namfile [open congestion.nam w] #create a nam file for animation
$ns namtrace-all 
$namfile
 
set n0 [$ns node]
set n1 [$ns node]
set n2 [$ns node] #to create nodes
set n3 [$ns node]
set n4 [$ns node]
set n5 [$ns node]
# to create the link between the nodes with bandwidth, delay and queue
$ns duplex-link $n0 $n2 2Mb 10ms DropTail
$ns duplex-link $n1 $n2 2Mb 10ms DropTail
$ns duplex-link $n2 $n3 0.3Mb 200ms DropTail
$ns duplex-link $n3 $n4 0.5Mb 40ms DropTail
$ns duplex-link $n3 $n5 0.5Mb 30ms DropTail
set tcp1 [new Agent/TCP/Reno] # Here the agent is changed for simulating Vegas
# and Tahoe, remaining code remains same
$ns attach-agent $n0 $tcp1 #attaching agent for the sender node
set sink1 [new Agent/TCPSink] # receiving (sink) node is n4
$ns attach-agent $n4 $sink1
$ns connect $tcp1 $sink1 # establish the traffic between the source and sink
set ftp1 [new Application/FTP] # Setup a FTP traffic generator on "tcp1"
$ftp1 attach-agent $tcp1
$ftp1 set type_ FTP 
$ns at 0.1 "$ftp1 start" # start/stop the traffic
$ns at 40.0 "$ftp1 stop"
$ns at 50.0 "finish" # Set simulation end time
 
# procedure to plot the congestion window
proc plotWindow {tcpSource outfile} {
 global ns
 set now [$ns now]
 set cwnd [$tcpSource set cwnd_]
 #the data is recorded in a file called congestion.xg (this can be plotted # using xgraph or 
gnuplot. this example uses xgraph to plot the cwnd_
 puts $outfile "$now $cwnd"
 $ns at [expr $now+0.1] "plotWindow $tcpSource $outfile"
}
set outfile [open "congestionReno.xg" w] #Here the file names are changed for Vegas 
$ns at 0.0 "plotWindow $tcp1 $outfile" # and Tahoe plotting
proc finish {} {
 global ns namfile
 $ns flush-trace
 close $namfile
 exit 0
}
$ns run # Run simulation 
